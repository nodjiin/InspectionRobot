/* Generated by AN DISI Unibo */ 
plan(0,init, sentence(true,move(print,qacontroller( start)),'','' )).
plan(1,init, sentence(true,move(solve,retractall( sensor( _)),0,"prologFailure"),'','' )).
plan(2,init, sentence(true,move(solve,consult( "./utils.pl"),0,"prologFailure"),'','' )).
plan(3,init, sentence(true,move( switchplan(sendUserMoveCommands) ),'','' )).
plan(0,sendUserMoveCommands, sentence(-  harmful ,move(print,"rimosso harmful"),'','' )).
plan(1,sendUserMoveCommands, sentence(true,senseEvent([harmful,inputcmd,usercmd,sensordata],[continue,continue,continue,continue],'','' )).
plan(2,sendUserMoveCommands, sentence(-  tout( X,Y) ,move( switchplan(handleTimeOut) ),'','' )).
plan(3,sendUserMoveCommands, sentence(true,printCurrentEvent(''),'','' )).
plan(4,sendUserMoveCommands, sentence(true,eventswitch(sensordata, Â»sensordata( X), move(solve,lastMove,0,"prologFailure") ),'','' )).
plan(5,sendUserMoveCommands, sentence(true,eventswitch(sensordata, Â»sensordata( X), move(solve,duplicateMoves,0,"prologFailure") ),'','' )).
plan(6,sendUserMoveCommands, sentence(true,eventswitch(sensordata, Â»sensordata( X), move( switchplan(inspection) ) ),'','' )).
plan(7,sendUserMoveCommands, sentence(true,eventswitch(usercmd, Â»usercmd( CMD), forward(qarobotexecutor, robotcommand,robotcommand( CMD)) ),'','' )).
plan(8,sendUserMoveCommands, sentence(true,eventswitch(usercmd, Â»usercmd( robotgui( CMD)), move(solve,addMove( CMD),0,"prologFailure") ),'','' )).
plan(9,sendUserMoveCommands, sentence(true,eventswitch(usercmd, Â»usercmd( CMD), forward(qarobotexecutor, robotcommand,robotcommand( stopLed)) ),'','' )).
plan(10,sendUserMoveCommands, sentence(true,move(repeatplan) ,'','' )).
plan(11,sendUserMoveCommands, sentence(true,move(resumeplan),'','' )).
plan(0,inspection, sentence(true,move(print,"START INSPECTION"),'','' )).
plan(1,inspection, sentence(true,forward(qarobotexecutor, robotcommand,robotcommand( blinkLed)),'','' )).
plan(2,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( a( low),1000)),'','' )).
plan(3,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( w( low),2000)),'','' )).
plan(4,inspection, sentence(true,delay( ) ,'','' )).
plan(5,inspection, sentence(true,move(print,"Controller to robot --> please shoot a photo!"),'','' )).
plan(6,inspection, sentence(true,forward(qarobotexecutor, robotcommand,robotcommand( shootAPic)),'','' )).
plan(7,inspection, sentence(true,receiveMsg(''),'','' )).
plan(8,inspection, sentence(true,msgswitch(picture, picture , move(print,"Analizing pic")),'','' )).
plan(9,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( d( low),1000)),'','' )).
plan(10,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( w( low),4000)),'','' )).
plan(11,inspection, sentence(true,delay( ) ,'','' )).
plan(12,inspection, sentence(true,move(print,"Controller to robot --> please shoot a photo!"),'','' )).
plan(13,inspection, sentence(true,forward(qarobotexecutor, robotcommand,robotcommand( shootAPic)),'','' )).
plan(14,inspection, sentence(true,receiveMsg(''),'','' )).
plan(15,inspection, sentence(true,msgswitch(picture, picture , move(print,"Analizing pic")),'','' )).
plan(16,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( d( low),1000)),'','' )).
plan(17,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( w( low),4000)),'','' )).
plan(18,inspection, sentence(true,delay( ) ,'','' )).
plan(19,inspection, sentence(true,move(print,"Controller to robot --> please shoot a photo!"),'','' )).
plan(20,inspection, sentence(true,forward(qarobotexecutor, robotcommand,robotcommand( shootAPic)),'','' )).
plan(21,inspection, sentence(true,receiveMsg(''),'','' )).
plan(22,inspection, sentence(true,msgswitch(picture, picture , move(print,"Analizing pic")),'','' )).
plan(23,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( d( low),1000)),'','' )).
plan(24,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( w( low),4000)),'','' )).
plan(25,inspection, sentence(true,delay( ) ,'','' )).
plan(26,inspection, sentence(true,move(print,"Controller to robot --> please shoot a photo!"),'','' )).
plan(27,inspection, sentence(true,forward(qarobotexecutor, robotcommand,robotcommand( shootAPic)),'','' )).
plan(28,inspection, sentence(true,receiveMsg(''),'','' )).
plan(29,inspection, sentence(true,msgswitch(picture, picture , move(print,"Analizing pic")),'','' )).
plan(30,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( d( low),1000)),'','' )).
plan(31,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( w( low),2000)),'','' )).
plan(32,inspection, sentence(true,delay( ) ,'','' )).
plan(33,inspection, sentence(true,forward(qarobotexecutor, robotcommandd,robotcommandd( a( low),1000)),'','' )).
plan(34,inspection, sentence(true,delay( ) ,'','' )).
plan(35,inspection, sentence(true,forward(qarobotexecutor, robotcommand,robotcommand( stopLed)),'','' )).
plan(36,inspection, sentence(true,move(print,"Sending the result to the A S C"),'','' )).
plan(37,inspection, sentence(true,forward(asc, inspectionresult,inspectionresult( harmful)),'','' )).
plan(38,inspection, sentence(true,move(print,"START AUTONOMOUS"),'','' )).
plan(39,inspection, sentence(true,move( switchplan(autonomousPhase) ),'','' )).
plan(40,inspection, sentence(true,move(resumeplan),'','' )).
plan(0,autonomousPhase, sentence( harmful,move(print,"Alarm Detected: Blinking led"),'','' )).
plan(1,autonomousPhase, sentence( harmful,forward(qarobotexecutor, robotcommand,robotcommand( blinkLed)),'','' )).
plan(2,autonomousPhase, sentence( clonedMoved( MOVE,DURATION),forward(qarobotexecutor, robotcommandd,robotcommandd( MOVE,DURATION)),'','' )).
plan(3,autonomousPhase, sentence(-  clonedMoved( MOVE,DURATION) ,move(solve,suspend( DURATION),0,"prologFailure"),'','' )).
plan(4,autonomousPhase, sentence(true,move(solve,clonedMoved( MOVE,DURATION),0,"sendUserMoveCommands"),'','' )).
plan(5,autonomousPhase, sentence(true,move(repeatplan) ,'','' )).
plan(6,autonomousPhase, sentence(true,move(resumeplan),'','' )).
plan(0,sendSecondRobot, sentence(true,move(solve,clonedMoved( MOVE,DURATION),0,"sendUserMoveCommands"),'','' )).
plan(1,sendSecondRobot, sentence(true,move(repeatplan) ,'','' )).
plan(2,sendSecondRobot, sentence(true,move(resumeplan),'','' )).
plan(0,prologFailure, sentence(true,move(print,"Prolog goal FAILURE"),'','' )).
plan(1,prologFailure, sentence(true,move(resumeplan),'','' )).
plan(0,handleAlarm, sentence(true,move(print,"handleAlarm"),'','' )).
plan(1,handleAlarm, sentence(true,move(resumeplan),'','' )).
plan(0,handleTimeOut, sentence(true,move(print,"handleTout and stop"),'','' )).
plan(1,handleTimeOut, sentence(true,move(resumeplan),'','' )).
